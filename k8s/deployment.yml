apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-retrieval
spec:
  replicas: 2  # Run 2 instances of this service
  selector:
    matchLabels:
      app: data-retrieval
  template:
    metadata:
      labels:
        app: data-retrieval
    spec:
      containers:
        - name: data-retrieval
          image: my-docker-repo/data-retrieval:latest  # Docker image
          ports:
            - containerPort: 8080
          env:
            - name: AWS_ACCESS_KEY  # Pass environment variable to the app
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: access-key
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: secret-key
            - name: AWS_REGION
              value: "us-east-1"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka-service:9092"  # Kafka service name in Kubernetes
            - name: SPRING_KAFKA_TOPIC_ENRICHMENT
              value: "data-enrichment-topic"  # Kafka topic for enrichment
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: data-retrieval-service
spec:
  selector:
    app: data-retrieval
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP  # Change to LoadBalancer for external access
